import math

def calculate_light_settings_skypanels60(desired_t_stop, input_iso, input_framerate):
    # Reference constants from camera setup
    REFERENCE_ILLUMINANCE = 4225.0   # lux (base light level at reference settings)
    REFERENCE_T_STOP = 16.03         # reference T-stop (from lens aperture)
    REFERENCE_ISO = 800              # reference ISO (from film exposure index)
    REFERENCE_FRAMERATE = 24         # reference framerate (fps)
    
    # Derived from empirical data points using the inverse square law
    LUMINOUS_INTENSITY = 11350.0     # lux·m² (measured light output)
    MAX_LIGHT_INTENSITY = 45288.0    # Max output of ARRI SkyPanel S60-C

    # Calculate required illuminance using only aperture, ISO, and framerate.
    illuminance_ratio = (
        (REFERENCE_T_STOP / desired_t_stop) ** 2 *  # Aperture factor (inverse square law)
        (REFERENCE_ISO / input_iso) *               # ISO factor (linear relationship)
        (input_framerate / REFERENCE_FRAMERATE)     # Framerate factor (substitutes for exposure time at 180° shutter)
    )
    
    required_illuminance = REFERENCE_ILLUMINANCE * illuminance_ratio

    # Calculate ideal distance using inverse square law: E = I / d² → d = √(I/E)
    ideal_distance = math.sqrt(LUMINOUS_INTENSITY / required_illuminance)

    # Enforce minimum distance of 1 meter
    if ideal_distance < 1.0:
        ideal_distance = 1.0
    
    # Calculate required luminous intensity at the chosen distance
    required_intensity = required_illuminance * (ideal_distance ** 2)

    # Convert intensity to percentage
    intensity_percentage = (required_intensity / MAX_LIGHT_INTENSITY) * 100

    # Adjust distance to keep intensity within 30%-80% range
    while intensity_percentage > 80 and ideal_distance < 15:  # Move light farther if too bright
        ideal_distance += 0.1
        required_intensity = required_illuminance * (ideal_distance ** 2)
        intensity_percentage = (required_intensity / MAX_LIGHT_INTENSITY) * 100

    while intensity_percentage < 30 and ideal_distance > 1.0:  # Move light closer if too dim
        ideal_distance -= 0.1
        required_intensity = required_illuminance * (ideal_distance ** 2)
        intensity_percentage = (required_intensity / MAX_LIGHT_INTENSITY) * 100

    # Ensure values are within 30%-80% range or as close as possible
    if intensity_percentage > 80:
        intensity_percentage = 80
    elif intensity_percentage < 30:
        intensity_percentage = 30

    # Round values for clarity
    ideal_distance = round(ideal_distance, 2)
    intensity_percentage = round(intensity_percentage, 2)

    return ideal_distance, intensity_percentage

# Get user inputs
print()
desired_t_stop = float(input("Enter desired T-stop (e.g., 2.8, 4, 5.6): "))
print()
input_iso = float(input("Enter ISO (e.g., 100, 400, 800): "))
print()
input_framerate = float(input("Enter framerate (fps, e.g., 24, 30, 60): "))
print()

# Compute ideal settings
distance, intensity_percentage = calculate_light_settings_skypanels60(desired_t_stop, input_iso, input_framerate)

# Output the results
print(f"\nTo expose your subject at T-{desired_t_stop} with ISO-{input_iso} and {input_framerate}fps:")
print(f"- Place the light {distance} meters from the subject.")
print(f"- Set the light intensity to {intensity_percentage}% of maximum output.\n")